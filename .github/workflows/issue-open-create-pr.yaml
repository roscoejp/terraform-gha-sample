name: Process enhancement issues

on:
  issues:
    types: [opened]

concurrency: main

jobs:
  create_comment: # filter by a tag that the template uses so we limit runs
    if: contains(github.event.issue.labels.*.name, 'enhancement')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - name: Update comment
        uses: edumserrano/find-create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body-includes: "<!-- Comment by GHA Automation -->"
          comment-author: "github-actions[bot]"
          body: |
            <!-- Comment by GHA Automation -->
            > ðŸ’¡ Note: This comment is informational only and will not be updated with changes to the PR or additional workflow runs. 

            Creating PR via automation. [Link to the run (valid for 90 days by default)](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          edit-mode: replace

  create_pr:
    needs: create_comment
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    outputs:
      pr_number: ${{ steps.create_pr.outputs.pull-request-number }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/tfvars_enhancement.yml

      - run: echo '${{ steps.issue-parser.outputs.jsonString }}' > issue.tfvars.json

      - run: cat issue.tfvars.json

      - name: Create pull request # PRs created using the default token don't trigger other workflows :(
        id: create_pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Changes by create-pull-request action for issue ${{ github.event.issue.number }}
          body: |
            Fixes #${{ github.event.issue.number }}

            <sub>Created by [create-pull-request](https://github.com/peter-evans/create-pull-request)</sub>
          base-branch: main
          branch: issue/${{ github.event.issue.number }}
          branch-suffix: short-commit-hash

      - name: Update comment
        uses: edumserrano/find-create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body-includes: "<!-- Comment by GHA Automation -->"
          comment-author: "github-actions[bot]"
          body: |
            PR #${{ steps.create_pr.outputs.pull-request-number }} successfully created.
            This issue should auto-close once the PR is merged.
          edit-mode: append

  plan: # call the plan job since PRs created using the default token don't trigger other workflows
    needs: create_pr
    uses: ./.github/workflows/terraform-plan.yml
    permissions:
      contents: read
      pull-requests: write
    with:
      tf_root_dir: "./"
      tf_version: "1.2.3"
      pr_number: ${{ needs.create_pr.outputs.pr_number }}

  output:
    needs: [plan, create_comment]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    steps:
      - name: Update comment
        uses: edumserrano/find-create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body-includes: "<!-- Comment by GHA Automation -->"
          comment-author: "github-actions[bot]"
          body: |
            Terraform init: `${{ needs.plan.outputs.init_outcome }}` <details><summary>Show Init Output</summary>
            ```
            ${{ needs.plan.outputs.init_stdout }}
            ```
            </details>

            Terraform Format: `${{ needs.plan.outputs.format_outcome }}` <details><summary>Show Format Output</summary>
            ```
            ${{ needs.plan.outputs.format_stdout }}
            ```
            </details>

            Terraform Validate: `${{ needs.plan.outputs.validation_outcome }}` <details><summary>Show Validation Output</summary>
            ```
            ${{ needs.plan.outputs.validation_stdout }}
            ```
            </details>

            Terraform Plan: `${{ needs.plan.outputs.plan_outcome }}` <details><summary>Show Plan Output</summary>
            ```terraform
            ${{ needs.plan.outputs.plan_stdout }}
            ```
            </details>

            Working directory saved to GH artifacts as `${{ needs.start.outputs.pr_number }}-tfplan.zip`. [Link to the artifact (valid for 90 days by default)](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts)

            <sub>Pull Request created by [create-pull-request](https://github.com/peter-evans/create-pull-request])</sub>
            <sub>Issue comments created by [find-create-or-update-comment](https://github.com/marketplace/actions/find-create-or-update-comment)</sub>
            <sub>Github issue to JSON conversion by [github-issue-parser](https://github.com/marketplace/actions/github-issue-parser)</sub>
          edit-mode: append
