name: Reusable Terraform plan

on:
  workflow_call:
    inputs:
      tf_root_dir:
        description: "The root directory of the Terraform code to run"
        required: false
        type: string
        default: "./"
      tf_version:
        description: "The Terraform version to run"
        required: false
        type: string
        default: "1.2.3"
      pr_number:
        description: "The Pull Request number to run the Terraform plan against"
        required: true
        type: string
    outputs: # Map the workflow outputs to job outputs
      init_outcome:
        description: "Outcome of the Terraform init command"
        value: ${{ jobs.terraform.outputs.init_outcome }}
      init_stdout:
        description: "STDOUT of the Terraform init command"
        value: ${{ jobs.terraform.outputs.init_stdout }}
      format_outcome:
        description: "Outcome of the Terraform fmt command"
        value: ${{ jobs.terraform.outputs.format_outcome }}
      format_stdout:
        description: "STDOUT of the Terraform fmt command"
        value: ${{ jobs.terraform.outputs.format_stdout }}
      validation_outcome:
        description: "Outcome of the Terraform validate command"
        value: ${{ jobs.terraform.outputs.validation_outcome }}
      validation_stdout:
        description: "STDOUT of the Terraform validate command"
        value: ${{ jobs.terraform.outputs.validation_stdout }}
      plan_outcome:
        description: "Outcome of the Terraform plan command"
        value: ${{ jobs.terraform.outputs.plan_outcome }}
      plan_stdout:
        description: "STDOUT of the Terraform plan command"
        value: ${{ jobs.terraform.outputs.plan_stdout }}

jobs:
  create_comment:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    outputs:
      comment-id: ${{ steps.update_comment.outputs.comment-id }}
    steps:
      - name: Update comment
        uses: edumserrano/find-create-or-update-comment@v3
        with:
          issue-number: ${{ inputs.pr_number }}
          body-includes: "<!-- Comment by GHA Plan Automation -->"
          comment-author: "github-actions[bot]"
          body: |
            <!-- Comment by GHA Plan Automation -->
            <sub>*Push Author: @${{ github.actor }}, Triggering Action: `${{ github.event_name }}`, Working Directory: `${{ inputs.tf_root_dir }}`, Workflow Name: `${{ github.workflow }}`*</sub>
            Running Terraform Plan via automation. [Link to the run (valid for 90 days by default)](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ---
          edit-mode: replace

  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.tf_root_dir }}
    permissions:
      contents: read
      pull-requests: write
    outputs: # Map the job outputs to step outputs
      init_outcome: ${{ steps.init.outcome }}
      init_stdout: ${{ steps.init.stdout }}
      format_outcome: ${{ steps.fmt.outcome }}
      format_stdout: ${{ steps.fmt.stdout }}
      validation_outcome: ${{ steps.validate.outcome }}
      validation_stdout: ${{ steps.validate.stdout }}
      plan_outcome: ${{ steps.plan.outcome }}
      plan_stdout: ${{ steps.plan.stdout }}

    steps: # continue-on-error for some of these since we _want_ the output. Fail at end of job.
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.tf_version }}

      - name: Init
        id: init
        run: terraform init
        continue-on-error: true

      - name: Format
        if: steps.init.outcome == 'success' # only if init passes
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Validate
        if: steps.init.outcome == 'success' # only if init passes
        id: validate
        run: terraform validate -no-color
        continue-on-error: true

      - name: Plan
        if: steps.validate.outcome == 'success' # only if validation passes
        id: plan
        run: terraform plan -no-color -out tfplan
        continue-on-error: true

      - name: Upload artifact
        if: steps.plan.outcome == 'success' # only save if plan passes
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.pr_number }}-tfplan.zip # artifacts always use PR #
          path: ./
          if-no-files-found: error # will fail pipeline if nothing found

  output:
    needs: [terraform, create_comment]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Update comment
        uses: edumserrano/find-create-or-update-comment@v3
        with:
          issue-number: ${{ inputs.pr_number }}
          body-includes: "<!-- Comment by GHA Plan Automation -->"
          comment-author: "github-actions[bot]"
          body: |
            Terraform init: `${{ needs.terraform.outputs.init_outcome }}` <details><summary>Show Init Output</summary>

            ```terraform
            ${{ needs.terraform.outputs.init_stdout }}
            ```

            </details>

            Terraform Format: `${{ needs.terraform.outputs.format_outcome }}` <details><summary>Show Format Output</summary>

            ```terraform
            ${{ needs.terraform.outputs.format_stdout }}
            ```

            </details>

            Terraform Validate: `${{ needs.terraform.outputs.validation_outcome }}` <details><summary>Show Validation Output</summary>

            ```terraform
            ${{ needs.terraform.outputs.validation_stdout }}
            ```

            </details>

            Terraform Plan: `${{ needs.terraform.outputs.plan_outcome }}` <details><summary>Show Plan Output</summary>

            ```terraform
            ${{ needs.terraform.outputs.plan_stdout }}
            ```
            
            </details>

            Working directory saved to GH artifacts as `${{ inputs.pr_number }}-tfplan.zip`. [Link to the artifact (valid for 90 days by default)](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts)

            <sub>Pull Request created by [create-pull-request](https://github.com/peter-evans/create-pull-request])</sub>
            <sub>Issue comments created by [find-create-or-update-comment](https://github.com/marketplace/actions/find-create-or-update-comment)</sub>
          edit-mode: append

      - name: Fail workflow on plan failure/skip
        if: needs.terraform.outputs.plan_outcome != 'success'
        run: exit 1
